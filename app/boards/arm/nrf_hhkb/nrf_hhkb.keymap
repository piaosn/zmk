/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>


#define KM_DEFAULT 0
#define KM_FN 1

/ {
	behaviors {
        // ht: hold_tap {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "POSITIONAL_HOLD_TAP";
        //     flavor = "hold-preferred";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <400>;
        //     quick-tap-ms = <200>;
        //     bindings = <&kp>, <&kp>;
        // };

		// ht_bt: hold_tap {
        //     compatible = "zmk,behavior-hold-tap";
        //     label = "POSITIONAL_HOLD_TAP";
        //     flavor = "hold-preferred";
        //     #binding-cells = <2>;
        //     tapping-term-ms = <400>;
        //     quick-tap-ms = <200>;
        //     bindings = <&bt>, <&bt>;
        // };
    };

	keymap {
		compatible = "zmk,keymap";

// ------------------------------------------------------------------------------------------
// | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |  \  |  `  |
// |  TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   Del   |
// |  CAPS   |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |    ENTER    |
// |   SHIFT   |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |   SHIFT   | FN  |
//        | ALT |   CMD   |               SPACE               |   CMD   | ALT |
// ------------------------------------------------------------------------------------------
		// Layer 0
		default_layer {
			label = "NUM";
			bindings = <
	&kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp   N8  &kp  N9 &kp  N0  &kp MINUS &kp EQUAL &kp BSLH &kp GRAVE
	&kp TAB  &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp   I   &kp  O  &kp   P  &kp LBKT &kp RBKT       &kp BSPC 
	&kp LCTL  &kp A  &kp S  &kp D  &kp F  &kp G  &kp H  &kp J  &kp   K   &kp  L  &kp SEMI &kp SQT                &kp RET
	&kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B  &kp N  &kp M  &kp COMMA &kp DOT &kp FSLH         &kp RSHFT     &mo KM_FN
	            &kp LALT &kp LGUI               &kp SPACE                 &kp  RGUI  &kp  RALT
			>;
		};

 		// Layer 1
		fn_layer {
			label = "Fn";
			bindings = <
&kp K_COFFEE 	&kp F1     		&kp F2     		&kp F3     		&kp F4     		&kp F5     		&kp F6     		&kp F7     	&kp F8   	&kp F9		&kp F10    		&kp F11    	&kp F12  &kp INS	&kp DEL
&kp CAPS     	&bt BT_SEL 0 	&bt BT_SEL 1 	&bt BT_SEL 2 	&out OUT_TOG	&out OUT_BLE	&out OUT_USB	&bt BT_CLR	&kp PSCRN	&kp SLCK   	&kp PAUSE_BREAK &kp UP     	&none    &trans
&trans          &kp C_VOL_DN 	&kp C_VOL_UP 	&kp C_MUTE   	&kp C_EJECT     &none      		&kp ASTRK   	&kp FSLH    &kp HOME    &kp PG_UP   &kp LEFT      	&kp RIGHT  	&trans
&trans          &bootloader     &reset      	&none      		&none      		&none      		&kp PLUS    	&kp MINUS   &kp END     &kp PG_DN   &kp DOWN      	&trans		&trans
            					&trans       	&kp C_STOP      &trans                                                                  &trans     	&trans     
			>;
		};
	};
};
